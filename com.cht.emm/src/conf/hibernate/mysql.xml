<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.1.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       					http://www.springframework.org/schema/tx
       					http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<bean id="memCache" class="com.cht.emm.util.MemCache"  ></bean>
	<bean id="emmService" class="com.cht.emm.util.emm.EMMService"  >
	    <property name="serverUrl" >
	        <value>http://119.254.111.223:7001//thirdpartaccess</value>
	    </property>
	    <property name="appKey">
	        <value>EPM</value>
	    </property>
	    <property name="secret">
	        <value>FHuma025</value>
	    </property>
	    <property name="v">
	        <value>1.0</value>
	    </property>
	    <property name="format">
	        <value>json</value>
	    </property>
	    <property name="used">
	        <value>false</value>
	    </property>
	</bean>
	<context:component-scan base-package="com.cht.emm" />
 
	<!-- jdbc连接配置 -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
        <property name="driverClassName" >
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property name="url" >
            <value><![CDATA[jdbc:mysql://127.0.0.1:8008/mip_test?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull]]></value>
        </property>
        <property name="username" >
            <value>root</value>
        </property>
        <property name="password" >
            <value>1234ewq</value>
        </property>
    </bean>
 -->
	<!-- c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">

		<property name="driverClass" value="com.mysql.jdbc.Driver" />  
		<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/mip?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull" />
		<property name="user" value="root" />  
		<property name="password" value="cht" />  
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="10" />  
		<!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="100" />  
        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0,单位为秒 -->
        <property name="maxIdleTime" value="1800" />
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
        <property name="acquireIncrement" value="3" /> 
        <!--两次连接中间隔时间，单位毫秒。Default: 1000 -->
		<property name="acquireRetryDelay" value="1000" /> 
        <property name="maxStatements" value="1000" />  
        <!--初始化时获取10个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="10" />  
        <property name="idleConnectionTestPeriod" value="60" />  
        <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
        <property name="acquireRetryAttempts" value="30" />  
        <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效
		保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
		获取连接失败后该数据源将申明已断开并永久关闭。Default: false-->
        <property name="breakAfterAcquireFailure" value="true" />  
        <property name="testConnectionOnCheckout" value="false" />  
        
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="packagesToScan" value="com.cht.emm.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">com.cht.emm.common.dao.hibernate4.dialect.common.MysqlExtendedDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 开启二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<!-- 开启查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<!-- 二级缓存区域名的前缀 -->
				<!--<prop key="hibernate.cache.region_prefix">h3test</prop> -->
				<!-- 高速缓存提供程序 -->
				<!-- prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop -->
				<!-- 指定缓存配置文件位置 -->
				<prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:/conf/ehcache.xml</prop>
				<!-- 强制Hibernate以更人性化的格式将数据存入二级缓存 -->
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<!-- Hibernate将收集有助于性能调节的统计数据 -->
				<prop key="hibernate.generate_statistics">true</prop>
			</props>
		</property>


	</bean>
	<aop:aspectj-autoproxy expose-proxy="true"/>
	<!-- 开启注解事务 只对当前配置文件有效 -->
  	<tx:annotation-driven transaction-manager="txManager"/>
    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="merge*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="put*" propagation="REQUIRED" />
            <tx:method name="use*" propagation="REQUIRED"/>
            <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <aop:config expose-proxy="true">
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="txPointcut" expression="execution(* com.cht.emm..service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>
</beans>