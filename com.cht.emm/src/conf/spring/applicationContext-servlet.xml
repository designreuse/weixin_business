<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="   
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context.xsd  
           http://www.springframework.org/schema/mvc
 	   http://www.springframework.org/schema/mvc/spring-mvc.xsd
 	   http://www.springframework.org/schema/task 
 	   http://www.springframework.org/schema/task/spring-task.xsd">
    
    <!-- 启动扫描所有的controller -->
    <context:component-scan base-package="com.cht.emm.controller"/>
    <!-- 调度任务 -->
    <bean id="clearNewsTask" class="com.cht.emm.schedule.ClearNewsTask">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <task:scheduled-tasks>
    	<!-- 每分钟执行一次，测试用 
		<task:scheduled ref="clearNewsTask" method="run"
			cron="0 * * * * ?" /-->
		<!-- 每月1号0点执行一次，实际用 -->
		<task:scheduled ref="clearNewsTask" method="run"
			cron="0 0 0 1 * ?" />
    </task:scheduled-tasks>
    <bean id="clearTokenTask" class="com.cht.emm.schedule.ClearTokenTask">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <task:scheduled-tasks>
    	<!-- 每分钟执行一次，测试用 
		<task:scheduled ref="clearTokenTask" method="run"
			cron="* 1 * * * ?" />-->
		<!-- 每月1号0点执行一次，实际用 -->
		<task:scheduled ref="clearTokenTask" method="run"
			cron="0 0 0 1 * ?" />
    </task:scheduled-tasks>
    <bean id="clearNotificationMOTask" class="com.cht.emm.schedule.ClearNotificationMOTask">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <task:scheduled-tasks>
    	<!-- 每分钟执行一次，测试用
		<task:scheduled ref="clearNotificationMOTask" method="run"
			cron="0 * * * * ?" /> -->
		<!-- 每月1号0点执行一次，实际用 -->
		<task:scheduled ref="clearNotificationMOTask" method="run"
			cron="0 0 0 1 * ?" />
    </task:scheduled-tasks>
    <!--  主要作用于@Controller，激活该模式      
    	下面是一种简写形式，完全可以手动配置替代这种简写形式；
    	 它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,
    	   是spring MVC为@Controllers分发请求所必须的
     -->
    <bean id="utf8Charset" class="java.nio.charset.Charset"
          factory-method="forName">
        <constructor-arg value="UTF-8"/>
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg ref="utf8Charset"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
	
	<bean id="tokenInterceptor" class="com.cht.emm.security.MyTokenInterceptor"></bean>
	
    <!-- 拦截器配置  -->
    <mvc:interceptors>
    	<bean class="com.cht.emm.security.MyInterceptor" />
    	<mvc:interceptor>
			<mvc:mapping path="/rest/mobile/**"/>
			<bean class="com.cht.emm.security.MyTokenInterceptor" />
		</mvc:interceptor>
    </mvc:interceptors>   
    
    <!-- 配置js，css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理 -->
    <mvc:resources mapping="/devoops/**" location="/devoops/"/>
    <mvc:resources mapping="/jstree-master/**" location="/jstree-master/"/>
	<mvc:resources mapping="/resources/**" location="/resources/"/>
	<mvc:resources mapping="/uploads/**" location="/uploads/"/>
		    
    <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/views/目录下，查找XXX.jsp文件-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="prefix" value="/views/"></property>
    	<property name="suffix" value=".jsp"></property>
    </bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="3000000"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	<bean id="SpringContextUtil " class="com.cht.emm.util.context.SpringContextUtil" scope="singleton" />
</beans>